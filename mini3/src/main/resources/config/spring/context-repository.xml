<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd    
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-3.0.xsd
    ">
    
    <bean id="DatabaseUpdate" class="com.omp.common.service.DatabaseUpdate" />
    
    <task:scheduler id="scheduler" pool-size="2"/>
    <task:scheduled-tasks scheduler="scheduler">
    	<task:scheduled ref="DatabaseUpdate" method="scheduler"
    	cron="0 59 23 * * *"/>
    </task:scheduled-tasks>
    
<!--     Enables the Spring MVC @Controller programming model
	<mvc:annotation-driven />
	<security:global-method-security
		secured-annotations="enabled" /> 
	
	Handles HTTP GET requests for /resources/** by efficiently serving up 
		 static resources in the ${webappRoot}/resources directory
	<mvc:resources mapping="/resources/**" location="/resources/" /> 
	
	Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean> -->

	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="--" />
		<property name="password" value="--" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>

	<!-- 빈 객체를 자동 등록 처리 -->
	<context:component-scan base-package="com.omp" />

	<!-- mybatis 객체 준비 -->
	<context:property-placeholder location="classpath:config/mybatis/db.properties" />

	<!-- mvc 관련 객체 등록 작업 진행 : @RequestMapping 애노테이션을 처리등.. -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html; charset=UTF-8</value>
					</list>
				</property>
			</bean>

			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html; charset=UTF-8</value>
						<value>application/json; charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 최대 업로드 파일 사이즈 : 10MB -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760" />
	</bean>

	<!-- DBCP 사용 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.mysql.driver}"
		p:url="${jdbc.mysql.url}?serverTimezone=UTC&amp;createDatabaseIfNotExist=true&amp;autoReconnect=true&amp;useSSL=false"
		p:username="${jdbc.mysql.username}" p:password="${jdbc.mysql.password}" />

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.omp.repository.domain" />
		<property name="mapperLocations" value="classpath:config/sqlmap/mysql/*.xml" />
		<property name="configLocation" value="classpath:config/mybatis/sqlMapConfig.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.omp.repository.mapper" />
	</bean>

	<!-- 트랜잭션 처리 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />



	<!-- WEB의 정적 페이지 처리 등을 위해 사용 -->
	<mvc:default-servlet-handler />

	<!-- JSP 페이지로 이동 시 아래의 설정 내용을 참고 -->
	<mvc:view-resolvers>
		<mvc:jsp prefix="/WEB-INF/jsp/" suffix=".jsp" />
	</mvc:view-resolvers>

</beans>





























